{"version":3,"file":"static/js/18.c5144e9f.chunk.js","mappings":"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","sources":["components/loader/Loader.jsx","components/moviesGalleryItem/MoviesGalleryItem.jsx","pages/home/Home.jsx","services/themoviedb-api.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            color=\"#3f51b5\"\n            ariaLabel=\"grid-loading\"\n            radius=\"12.5\"\n            wrapperStyle={{margin: 'auto'}}\n            visible={true}\n        />\n    );\n};\n\nexport default Loader;","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesGalleryItem = ({ id, title }) => {\n    const location = useLocation();\n\n    return (\n        <li><Link\n            to={location.pathname === '/movies' ? `${id}` : `movies/${id}`}\n            state={{ from: location }}>{title}</Link></li>\n    );\n};\n\nMoviesGalleryItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n};\n\nexport default MoviesGalleryItem;","import { useState, useEffect } from 'react';\nimport Notiflix from 'notiflix';\n\nimport Loader from '../../components/loader';\nimport MoviesGalleryItem from '../../components/moviesGalleryItem';\n\nimport { fetchMovies } from '../../services/themoviedb-api';\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n      fetchMovies().then(galery => {\n        if (galery.length === 0) {\n          Notiflix.Notify.warning('Nothing found for your request');\n          setIsLoading(false);\n        } else {\n          setMovies(() => [...galery]);\n          setIsLoading(false);\n        }\n      });\n    } catch (err) {\n      setError(true);\n      setIsLoading(false);\n      Notiflix.Notify.failure('Oops... Something went wrong please try again!');\n      console.log(error);\n    }\n  }, [error]);\n\n  return (\n    <div>\n      <h2>Trending today</h2>\n      {isLoading && <Loader />}\n      <ul>\n        {movies &&\n          movies.map(({ id, title }) => (\n            <MoviesGalleryItem key={id} id={id} title={title} />\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_TO_API = 'ae38d5c8baf36c9c4ca14e9456f3c0fd';\n\nexport async function fetchMovies() {\n  const optionsURL = 'trending/movie/day';\n  const keyURL = `?api_key=${KEY_TO_API}`;\n\n  const url = BASE_URL + optionsURL + keyURL;\n\n  const response = await axios.get(url);\n  const movies = await response.data.results;\n\n  return movies;\n};\n\nexport async function fetchInfo(id) {\n  const optionsURL = `movie/${id}`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n  const endURL = '&language=en-US'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const info = await response.data;\n\n  return info;\n};\n\nexport async function fetchReviews(id) {\n  const optionsURL = `movie/${id}/reviews`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n  const endURL = '&language=en-US'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const reviews = await response.data.results;\n\n  return reviews;\n};\n\nexport async function fetchCast(id) {\n  const optionsURL = `movie/${id}/credits`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n\n  const url = BASE_URL + optionsURL + keyURL;\n\n  const response = await axios.get(url);\n  const cast = await response.data.cast;\n\n  return cast;\n};\n\nexport async function fetchSearch(term) {\n  const optionsURL = `search/movie?query=${term}`;\n  const keyURL = `&api_key=${KEY_TO_API}`;\n  const endURL = '&include_adult=false&language=en-US&page=1'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const search = await response.data.results;\n\n  return search;\n};"],"names":["height","width","color","ariaLabel","radius","wrapperStyle","margin","visible","id","title","location","useLocation","to","pathname","state","from","useState","isLoading","setIsLoading","movies","setMovies","error","setError","useEffect","fetchMovies","then","galery","length","Notiflix","err","console","log","map","MoviesGalleryItem","BASE_URL","KEY_TO_API","keyURL","url","axios","response","data","results","fetchInfo","optionsURL","info","fetchReviews","reviews","fetchCast","cast","fetchSearch","term","search"],"sourceRoot":""}