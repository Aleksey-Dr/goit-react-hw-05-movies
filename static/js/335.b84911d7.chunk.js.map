{"version":3,"file":"static/js/335.b84911d7.chunk.js","mappings":"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","sources":["components/loader/Loader.jsx","components/moviesGalleryItem/MoviesGalleryItem.jsx","webpack://goit-react-hw-05-movies/./src/components/searchbar/Searchbar.module.css?b775","components/searchbar/Searchbar.jsx","pages/movies/Movies.jsx","services/themoviedb-api.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            color=\"#3f51b5\"\n            ariaLabel=\"grid-loading\"\n            radius=\"12.5\"\n            wrapperStyle={{margin: 'auto'}}\n            visible={true}\n        />\n    );\n};\n\nexport default Loader;","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesGalleryItem = ({ id, title }) => {\n    const location = useLocation();\n\n    return (\n        <li><Link\n            to={location.pathname === '/movies' ? `${id}` : `movies/${id}`}\n            state={{ from: location }}>{title}</Link></li>\n    );\n};\n\nMoviesGalleryItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n};\n\nexport default MoviesGalleryItem;","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Searchbar_searchbar__vDSrm\",\"form\":\"Searchbar_form__8NXX2\",\"button\":\"Searchbar_button__V2v1w\",\"button-label\":\"Searchbar_button-label__3I+YR\",\"input\":\"Searchbar_input__hqNq7\"};","import { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport clsx from 'clsx';\nimport { ImSearch } from 'react-icons/im';\n\nimport css from './Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [term, setTerm] = useState('');\n\n  const handleTermChange = event => setTerm(event.target.value.toLowerCase());\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (term.trim() === '') {\n      alert('Empty string');\n      return;\n    }\n    onSubmit(term);\n    setTerm('');\n  };\n\n  return (\n    <header className={clsx(css.searchbar)}>\n      <form className={clsx(css.form)} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={clsx(css.button)}>\n          <span className={clsx(css['button-label'])}>\n            <ImSearch size=\"20\" />\n          </span>\n        </button>\n\n        <input\n          className={clsx(css.input)}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={term}\n          onChange={handleTermChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Notiflix from 'notiflix';\n\nimport Searchbar from 'components/searchbar/';\n\nimport { fetchSearch } from '../../services/themoviedb-api';\nimport MoviesGalleryItem from 'components/moviesGalleryItem/MoviesGalleryItem';\nimport Loader from 'components/loader/Loader';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(false);\n    \n    const term = searchParams.get('term') ?? '';\n\n  useEffect(() => {\n    if (term !== '') {\n      try {\n        setIsLoading(true);\n        fetchSearch(term).then(galery => {\n          if (galery.length === 0) {\n            Notiflix.Notify.warning('Nothing found for your request');\n            setIsLoading(false);\n          } else {\n            setMovies(() => [...galery]);\n            setIsLoading(false);\n          }\n        });\n      } catch (err) {\n        setError(true);\n        setIsLoading(false);\n        Notiflix.Notify.failure(\n          'Oops... Something went wrong please try again!'\n        );\n        console.log(error);\n      }\n    }\n  }, [error, term]);\n\n  const handleSearcbarSubmit = search => {\n    setSearchParams({ term: search });\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleSearcbarSubmit} />\n      {isLoading && <Loader />}\n      {movies &&\n        movies.map(({ id, title }) => (\n          <MoviesGalleryItem key={id} id={id} title={title} />\n        ))}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_TO_API = 'ae38d5c8baf36c9c4ca14e9456f3c0fd';\n\nexport async function fetchMovies() {\n  const optionsURL = 'trending/movie/day';\n  const keyURL = `?api_key=${KEY_TO_API}`;\n\n  const url = BASE_URL + optionsURL + keyURL;\n\n  const response = await axios.get(url);\n  const movies = await response.data.results;\n\n  return movies;\n};\n\nexport async function fetchInfo(id) {\n  const optionsURL = `movie/${id}`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n  const endURL = '&language=en-US'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const info = await response.data;\n\n  return info;\n};\n\nexport async function fetchReviews(id) {\n  const optionsURL = `movie/${id}/reviews`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n  const endURL = '&language=en-US'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const reviews = await response.data.results;\n\n  return reviews;\n};\n\nexport async function fetchCast(id) {\n  const optionsURL = `movie/${id}/credits`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n\n  const url = BASE_URL + optionsURL + keyURL;\n\n  const response = await axios.get(url);\n  const cast = await response.data.cast;\n\n  return cast;\n};\n\nexport async function fetchSearch(term) {\n  const optionsURL = `search/movie?query=${term}`;\n  const keyURL = `&api_key=${KEY_TO_API}`;\n  const endURL = '&include_adult=false&language=en-US&page=1'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const search = await response.data.results;\n\n  return search;\n};"],"names":["height","width","color","ariaLabel","radius","wrapperStyle","margin","visible","id","title","location","useLocation","to","pathname","state","from","onSubmit","useState","term","setTerm","className","clsx","css","event","preventDefault","trim","alert","type","size","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","movies","setMovies","error","setError","get","useEffect","fetchSearch","then","galery","length","Notiflix","err","console","log","search","Loader","map","MoviesGalleryItem","BASE_URL","KEY_TO_API","fetchMovies","keyURL","url","axios","response","data","results","fetchInfo","optionsURL","info","fetchReviews","reviews","fetchCast","cast"],"sourceRoot":""}