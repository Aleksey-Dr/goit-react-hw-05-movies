{"version":3,"file":"static/js/245.e08251bd.chunk.js","mappings":"6TAqDA,EA5Ca,WACT,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACN,IACAL,GAAa,IACbM,EAAAA,EAAAA,GAAUV,GAASW,MAAK,SAAAC,GACO,IAAvBA,EAAYC,QAGZP,GAAQ,yBAAUM,EAAV,IAFZR,GAAa,EAKhB,GAMA,CALC,MAAOU,GACTN,GAAS,GACTJ,GAAa,GACbW,IAAAA,OAAAA,QAAwB,kDACxBC,QAAQC,IAAIV,EACX,CACJ,GAAE,CAACA,EAAOP,KAGP,2BACKG,IAAa,SAAC,IAAD,KACd,wBAAI,SACHE,EAAKQ,OAAS,GACX,wBACKR,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACL,2BACG,gBAAKC,IAAKF,EAAY,0CAAsCA,GACtDG,EAAeC,IAAKN,EAAMO,MAAM,SAC1C,uBAAIP,KACJ,yBAAG,cAAYG,OAJLF,EADJ,MAOL,yBAGxB,C,4ECnCD,EAde,WACX,OACI,SAAC,KAAD,CACIO,OAAO,KACPD,MAAM,KACNE,MAAM,UACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CAACC,OAAQ,QACvBC,SAAS,GAGpB,C,8ICZKC,EAAW,gCACXC,EAAa,mCAEZ,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,gGACc,qBACbC,EAFD,mBAEsBF,GAErBG,EAAMJ,EAHO,qBAGiBG,EAJ/B,SAMkBE,EAAAA,EAAAA,IAAUD,GAN5B,cAMCE,EAND,gBAOgBA,EAASC,KAAKC,QAP9B,cAOCC,EAPD,yBASEA,GATF,mEAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBxB,GAAzB,sFACCyB,EADD,gBACuBzB,GACtBiB,EAFD,mBAEsBF,GACZ,kBAETG,EAAMJ,EAAWW,EAAaR,EAFrB,kBAHV,SAOkBE,EAAAA,EAAAA,IAAUD,GAP5B,cAOCE,EAPD,gBAQcA,EAASC,KARvB,cAQCK,EARD,yBAUEA,GAVF,mEAaA,SAAepC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBU,GAAzB,sFACCyB,EADD,gBACuBzB,EADvB,YAECiB,EAFD,mBAEsBF,GAErBG,EAAMJ,EAAWW,EAAaR,EAJ/B,SAMkBE,EAAAA,EAAAA,IAAUD,GAN5B,cAMCE,EAND,gBAOcA,EAASC,KAAKpC,KAP5B,cAOCA,EAPD,yBASEA,GATF,mE","sources":["components/cast/Cast.jsx","components/loader/Loader.jsx","services/themoviedb-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\n\nimport Notiflix from 'notiflix';\nimport Loader from '../loader';\n\nimport { fetchCast } from '../../services/themoviedb-api'\nimport defaultAvatar from '../../images/avatar.png'\n\nconst Cast = () => {\n    const { movieId } = useParams();\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [cast, setCast] = useState([]);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        try {\n        setIsLoading(true);\n        fetchCast(movieId).then(description => {\n            if (description.length === 0) {\n            setIsLoading(false);\n            } else {\n                setCast(() => [...description]);\n            setIsLoading(false);\n            }\n        });\n        } catch (err) {\n        setError(true);\n        setIsLoading(false);\n        Notiflix.Notify.failure('Oops... Something went wrong please try again!');\n        console.log(error);\n        }\n    }, [error, movieId]);\n\n    return (\n        <div>\n            {isLoading && <Loader />}\n            <h3>Cast</h3>\n            {cast.length > 0 ? (\n                <ul>\n                    {cast.map(({ name, id, profile_path, character, }) =>\n                        (<li key={id}>\n                            <img src={profile_path ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                                : defaultAvatar} alt={name} width=\"200\" />\n                        <p>{name}</p>\n                        <p>Character: {character}</p>\n                        </li>))}\n                </ul>) : 'Sorry no information' }\n        </div>\n    );\n};\n\nexport default Cast;","import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            color=\"#3f51b5\"\n            ariaLabel=\"grid-loading\"\n            radius=\"12.5\"\n            wrapperStyle={{margin: 'auto'}}\n            visible={true}\n        />\n    );\n};\n\nexport default Loader;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_TO_API = 'ae38d5c8baf36c9c4ca14e9456f3c0fd';\n\nexport async function fetchMovies() {\n  const optionsURL = 'trending/movie/day';\n  const keyURL = `?api_key=${KEY_TO_API}`;\n\n  const url = BASE_URL + optionsURL + keyURL;\n\n  const response = await axios.get(url);\n  const movies = await response.data.results;\n\n  return movies;\n};\n\nexport async function fetchInfo(id) {\n  const optionsURL = `movie/${id}`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n  const endURL = '&language=en-US'\n\n  const url = BASE_URL + optionsURL + keyURL + endURL;\n\n  const response = await axios.get(url);\n  const info = await response.data;\n\n  return info;\n};\n\nexport async function fetchCast(id) {\n  const optionsURL = `movie/${id}/credits`;\n  const keyURL = `?api_key=${KEY_TO_API}`;\n\n  const url = BASE_URL + optionsURL + keyURL;\n\n  const response = await axios.get(url);\n  const cast = await response.data.cast;\n\n  return cast;\n};"],"names":["movieId","useParams","useState","isLoading","setIsLoading","cast","setCast","error","setError","useEffect","fetchCast","then","description","length","err","Notiflix","console","log","map","name","id","profile_path","character","src","defaultAvatar","alt","width","height","color","ariaLabel","radius","wrapperStyle","margin","visible","BASE_URL","KEY_TO_API","fetchMovies","keyURL","url","axios","response","data","results","movies","fetchInfo","optionsURL","info"],"sourceRoot":""}